apply plugin: 'com.android.library'
apply from: "$extBuildDir/common.gradle"

android {
    defaultConfig {
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /*+++++++++++++++++++++++++++++++Lifecycle Start+++++++++++++++++++++++++++++++++*/
//    // ViewModel and LiveData
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
//    // optional - ReactiveStreams support for LiveData
//    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.2.0'
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"

    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
//    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    api "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    api "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    api "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    /*+++++++++++++++++++++++++++++++Lifecycle End+++++++++++++++++++++++++++++++++*/

    //协程
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    //启动流
    api "androidx.startup:startup-runtime:1.0.0-rc01"
    implementation project(path: ':libraries:util')
}
